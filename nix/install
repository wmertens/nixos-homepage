#!/bin/sh

# This script installs the Nix package manager on your system by
# downloading a binary distribution and running its installer script
# (which in turn creates and populates /nix).

{ # Prevent execution if this script was only partially downloaded

unpack=nix-binary-tarball-unpack

require_util() {
    type "$1" > /dev/null 2>&1 || which "$1" > /dev/null 2>&1 ||
        oops "you do not have \`$1' installed, which i need to $2"
}

clean() {
    echo "Removing temporary files..." >&2
    rm -rf "$unpack"
}

oops() {
    echo "$0: $@" >&2
    clean
    exit 1
}

case "$(uname -s).$(uname -m)" in
    Linux.x86_64) system=x86_64-linux;;
    Linux.i?86) system=i686-linux;;
    Darwin.x86_64) system=x86_64-darwin;;
    *) oops "sorry, there is no binary distribution of Nix for your platform";;
esac

url="https://nixos.org/releases/nix/nix-1.7/nix-1.7-$system.tar.bz2"

require_util curl "download the binary tarball"
require_util bzcat "decompress the binary tarball"
require_util tar "unpack the binary tarball"

if [ -d "$unpack" ]; then
	echo "Install binaries already downloaded"
	echo "If you want to download them again, remove \"$unpack\""
else
	echo "unpacking Nix binary tarball for $system from \`$url'..."
	mkdir "$unpack" || oops "failed to create \`$unpack' directory"
	curl -L "$url" | bzcat | tar x -C "$unpack" || oops "failed to unpack \`$url'"
fi

[ -e "$unpack"/*/install ] ||
    oops "installation script is missing from the binary tarball!"

if "$unpack"/*/store/*-bash-*/bin/bash "$unpack"/*/install; then
	clean
else
	echo "Installation failed - please remedy the cause and run this command again" >&2
	echo "Keeping \"$unpack\" directory." >&2
	exit 1
fi

} # End of wrapping
